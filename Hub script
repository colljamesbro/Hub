-- GUI Setup
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create Password GUI
local screenGui = Instance.new("ScreenGui", playerGui)
screenGui.Name = "PasswordHub"

-- Password Entry UI
local passwordFrame = Instance.new("Frame", screenGui)
passwordFrame.Size = UDim2.new(0.4, 0, 0.4, 0)
passwordFrame.Position = UDim2.new(0.3, 0, 0.3, 0)
passwordFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

local passwordLabel = Instance.new("TextLabel", passwordFrame)
passwordLabel.Size = UDim2.new(1, 0, 0.2, 0)
passwordLabel.Position = UDim2.new(0, 0, 0, 0)
passwordLabel.Text = "Enter Password"
passwordLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
passwordLabel.TextScaled = true

local passwordInput = Instance.new("TextBox", passwordFrame)
passwordInput.Size = UDim2.new(0.8, 0, 0.2, 0)
passwordInput.Position = UDim2.new(0.1, 0, 0.3, 0)
passwordInput.PlaceholderText = "Enter password"
passwordInput.TextColor3 = Color3.fromRGB(0, 0, 0)
passwordInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

local passwordButton = Instance.new("TextButton", passwordFrame)
passwordButton.Size = UDim2.new(0.8, 0, 0.2, 0)
passwordButton.Position = UDim2.new(0.1, 0, 0.6, 0)
passwordButton.Text = "Submit"
passwordButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)

-- Points Adjustment Tab (Hidden Initially)
local sideTab = Instance.new("Frame", screenGui)
sideTab.Size = UDim2.new(0.3, 0, 1, 0)
sideTab.Position = UDim2.new(1, 0, 0, 0)  -- Position it offscreen initially
sideTab.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
sideTab.Visible = false  -- Hide the side tab initially

local pointsLabel = Instance.new("TextLabel", sideTab)
pointsLabel.Size = UDim2.new(1, 0, 0.2, 0)
pointsLabel.Text = "Set Diamonds & Rank"
pointsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
pointsLabel.TextScaled = true

local diamondsInput = Instance.new("TextBox", sideTab)
diamondsInput.Size = UDim2.new(0.8, 0, 0.2, 0)
diamondsInput.Position = UDim2.new(0.1, 0, 0.3, 0)
diamondsInput.PlaceholderText = "Enter Diamonds"
diamondsInput.TextColor3 = Color3.fromRGB(0, 0, 0)
diamondsInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

local rankInput = Instance.new("TextBox", sideTab)
rankInput.Size = UDim2.new(0.8, 0, 0.2, 0)
rankInput.Position = UDim2.new(0.1, 0, 0.6, 0)
rankInput.PlaceholderText = "Enter Rank"
rankInput.TextColor3 = Color3.fromRGB(0, 0, 0)
rankInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

local setPointsButton = Instance.new("TextButton", sideTab)
setPointsButton.Size = UDim2.new(0.8, 0, 0.2, 0)
setPointsButton.Position = UDim2.new(0.1, 0, 0.9, 0)
setPointsButton.Text = "Set Points"
setPointsButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)

-- Password Validation
local correctPassword = "password123"  -- Set your password here

passwordButton.MouseButton1Click:Connect(function()
    if passwordInput.Text == correctPassword then
        -- Hide Password GUI and Show Points Tab
        passwordFrame.Visible = false
        sideTab.Visible = true

        -- Slide the side tab into view
        sideTab:TweenPosition(UDim2.new(0.7, 0, 0, 0), "Out", "Sine", 0.5, true)
    else
        passwordInput.Text = ""  -- Clear input if wrong password
        passwordInput.PlaceholderText = "Incorrect password. Try again."
    end
end)

-- Points Set Functionality
setPointsButton.MouseButton1Click:Connect(function()
    local diamonds = tonumber(diamondsInput.Text)
    local rank = tonumber(rankInput.Text)

    -- Check for valid Diamonds input
    if diamonds and diamonds >= 0 then
        -- Ensure leaderstats folder exists and Diamonds stat exists
        if player:FindFirstChild("leaderstats") then
            local leaderstats = player.leaderstats
            local diamondsStat = leaderstats:FindFirstChild("Diamonds")

            if diamondsStat then
                diamondsStat.Value = diamonds  -- Set the Diamonds
                diamondsInput.Text = ""  -- Clear input
                print("Diamonds set to " .. diamonds)
            else
                -- If Diamonds stat is missing, print an error
                diamondsInput.Text = ""
                diamondsInput.PlaceholderText = "No Diamonds stat found"
                print("Error: No Diamonds stat found.")
            end
        else
            -- If leaderstats is missing, print an error
            diamondsInput.Text = ""
            diamondsInput.PlaceholderText = "No leaderstats found"
            print("Error: No leaderstats found.")
        end
    else
        diamondsInput.Text = ""
        diamondsInput.PlaceholderText = "Enter a valid number for Diamonds"
        print("Invalid Diamonds input.")
    end

    -- Check for valid Rank input
    if rank and rank >= 0 then
        -- Ensure Rank stat exists
        if player:FindFirstChild("leaderstats") then
            local leaderstats = player.leaderstats
            local rankStat = leaderstats:FindFirstChild("Rank")

            if rankStat then
                rankStat.Value = rank  -- Set the Rank
                rankInput.Text = ""  -- Clear input
                print("Rank set to " .. rank)
            else
                -- If Rank stat is missing, print an error
                rankInput.Text = ""
                rankInput.PlaceholderText = "No Rank stat found"
                print("Error: No Rank stat found.")
            end
        else
            -- If leaderstats is missing, print an error
            rankInput.Text = ""
            rankInput.PlaceholderText = "No leaderstats found"
            print("Error: No leaderstats found.")
        end
    else
        rankInput.Text = ""
        rankInput.PlaceholderText = "Enter a valid number for Rank"
        print("Invalid Rank input.")
    end
end)

-- Ensure leaderstats and Diamonds & Rank are created for the player when they join
game.Players.PlayerAdded:Connect(function(player)
    -- Create leaderstats folder for the player
    local leaderstats = Instance.new("Folder")
    leaderstats.Name = "leaderstats"
    leaderstats.Parent = player

    -- Create the Diamonds stat
    local diamonds = Instance.new("IntValue")
    diamonds.Name = "Diamonds"
    diamonds.Value = 0  -- Default Diamonds, you can set this to any value
    diamonds.Parent = leaderstats

    -- Create the Rank stat
    local rank = Instance.new("IntValue")
    rank.Name = "Rank"
    rank.Value = 0  -- Default Rank, you can set this to any value
    rank.Parent = leaderstats
end)
