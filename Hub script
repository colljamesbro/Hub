-- GUI Setup (Side Tab for Setting Points)

local sideTab = Instance.new("Frame", screenGui)
sideTab.Size = UDim2.new(0.3, 0, 1, 0)
sideTab.Position = UDim2.new(1, 0, 0, 0)  -- Position offscreen initially
sideTab.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
sideTab.Visible = false  -- Hidden initially

local pointsLabel = Instance.new("TextLabel", sideTab)
pointsLabel.Size = UDim2.new(1, 0, 0.2, 0)
pointsLabel.Text = "Set Kills & Total Kills"
pointsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
pointsLabel.TextScaled = true

local killsInput = Instance.new("TextBox", sideTab)
killsInput.Size = UDim2.new(0.8, 0, 0.2, 0)
killsInput.Position = UDim2.new(0.1, 0, 0.3, 0)
killsInput.PlaceholderText = "Enter Kills"
killsInput.TextColor3 = Color3.fromRGB(0, 0, 0)
killsInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

local totalKillsInput = Instance.new("TextBox", sideTab)
totalKillsInput.Size = UDim2.new(0.8, 0, 0.2, 0)
totalKillsInput.Position = UDim2.new(0.1, 0, 0.6, 0)
totalKillsInput.PlaceholderText = "Enter Total Kills"
totalKillsInput.TextColor3 = Color3.fromRGB(0, 0, 0)
totalKillsInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

local setPointsButton = Instance.new("TextButton", sideTab)
setPointsButton.Size = UDim2.new(0.8, 0, 0.2, 0)
setPointsButton.Position = UDim2.new(0.1, 0, 0.9, 0)
setPointsButton.Text = "Set Points"
setPointsButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)

-- Password Validation
passwordButton.MouseButton1Click:Connect(function()
    if passwordInput.Text == correctPassword then
        -- Hide Password GUI and Show Points Tab
        passwordFrame.Visible = false
        sideTab.Visible = true

        -- Slide the side tab into view
        sideTab:TweenPosition(UDim2.new(0.7, 0, 0, 0), "Out", "Sine", 0.5, true)
    else
        passwordInput.Text = ""  -- Clear input if wrong password
        passwordInput.PlaceholderText = "Incorrect password. Try again."
    end
end)

-- Set Kills and Total Kills and Check Door Access
setPointsButton.MouseButton1Click:Connect(function()
    local kills = tonumber(killsInput.Text)
    local totalKills = tonumber(totalKillsInput.Text)

    -- Check if valid Kills and Total Kills input
    if kills and kills >= 0 then
        -- Set Kills (visual update)
        if player:FindFirstChild("leaderstats") then
            local leaderstats = player.leaderstats
            local killsStat = leaderstats:FindFirstChild("Kills")
            if killsStat then
                killsStat.Value = kills
                killsInput.Text = ""  -- Clear input
            end
        end
    end

    if totalKills and totalKills >= 0 then
        -- Set Total Kills (visual update)
        if player:FindFirstChild("leaderstats") then
            local leaderstats = player.leaderstats
            local totalKillsStat = leaderstats:FindFirstChild("Total Kills")
            if totalKillsStat then
                totalKillsStat.Value = totalKills
                totalKillsInput.Text = ""  -- Clear input
            end
        end
    end

    -- Check if player has enough Kills and Total Kills to open the door
    local requiredKills = 50  -- Set the required amount of Kills
    local requiredTotalKills = 100  -- Set the required amount of Total Kills

    local killsStat = player.leaderstats and player.leaderstats:FindFirstChild("Kills")
    local totalKillsStat = player.leaderstats and player.leaderstats:FindFirstChild("Total Kills")

    if killsStat and totalKillsStat and killsStat.Value >= requiredKills and totalKillsStat.Value >= requiredTotalKills then
        -- Open the door (change transparency or position)
        local door = workspace:FindFirstChild("GP Door") or workspace:FindFirstChild("door")  -- Check for both possible names
        if door then
            -- Option 1: Move the door (or make it disappear)
            door.Position = door.Position + Vector3.new(0, 10, 0)  -- Move it up to simulate "opening"
            
            -- Option 2: Change transparency (make the door invisible)
            door.Transparency = 1
            door.CanCollide = false  -- Disable collision so the player can walk through it
            
            print("Door opened!")
        else
            print("Door not found!")
        end
    else
        -- Inform the player they don't have enough points
        print("Not enough points. You need at least " .. requiredKills .. " Kills and " .. requiredTotalKills .. " Total Kills to open the door.")
    end
end)
